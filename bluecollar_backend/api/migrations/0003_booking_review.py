# Generated by Django 5.2.1 on 2025-06-06 17:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0002_servicecategory_serviceproviderprofile'),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_description', models.TextField(help_text='Detailed description of the service required by the customer.')),
                ('booking_datetime', models.DateTimeField(help_text='Preferred date and time for the service.')),
                ('address_for_service', models.CharField(help_text='Address where the service is to be performed.', max_length=255)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Confirmation'), ('CONFIRMED', 'Confirmed by Provider'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED_BY_USER', 'Cancelled by User'), ('CANCELLED_BY_PROVIDER', 'Cancelled by Provider'), ('REJECTED_BY_PROVIDER', 'Rejected by Provider')], default='PENDING', max_length=30)),
                ('estimated_duration_hours', models.DecimalField(blank=True, decimal_places=1, help_text="Provider's estimated duration in hours.", max_digits=4, null=True)),
                ('quoted_price', models.DecimalField(blank=True, decimal_places=2, help_text='Price quoted by the provider, if applicable.', max_digits=10, null=True)),
                ('provider_notes', models.TextField(blank=True, help_text='Notes from the provider regarding this booking.')),
                ('customer_notes', models.TextField(blank=True, help_text='Additional notes from the customer.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(help_text='The user who is booking the service.', limit_choices_to={'is_provider': False}, on_delete=django.db.models.deletion.CASCADE, related_name='bookings_as_customer', to=settings.AUTH_USER_MODEL)),
                ('provider_profile', models.ForeignKey(help_text='The service provider for this booking.', on_delete=django.db.models.deletion.CASCADE, related_name='bookings_as_provider', to='api.serviceproviderprofile')),
                ('service_category_requested', models.ForeignKey(blank=True, help_text='The specific service category requested, if applicable.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.servicecategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Rating from 1 to 5 stars.')),
                ('comment', models.TextField(blank=True, help_text='Optional comments for the review.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.OneToOneField(help_text='The completed booking being reviewed.', limit_choices_to={'status': 'COMPLETED'}, on_delete=django.db.models.deletion.CASCADE, related_name='review', to='api.booking')),
                ('provider_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to='api.serviceproviderprofile')),
                ('reviewer', models.ForeignKey(limit_choices_to={'is_provider': False}, on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('booking', 'reviewer')},
            },
        ),
    ]
